# Production Configuration for E-Commerce Application

# Database Configuration (Production)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:ECommerceDB}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Database Connection Pool (HikariCP)
spring.datasource.hikari.maximum-pool-size=20
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.leak-detection-threshold=60000

# JPA Configuration for Production
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true

# Thymeleaf Configuration
spring.thymeleaf.cache=true
spring.thymeleaf.prefix=classpath:/templates/
spring.thymeleaf.suffix=.html
spring.thymeleaf.encoding=UTF-8
spring.thymeleaf.mode=HTML

# Security Configuration
spring.security.user.name=${ADMIN_USERNAME:admin}
spring.security.user.password=${ADMIN_PASSWORD}
spring.security.user.roles=ADMIN

# Razorpay Configuration (Production Keys)
razorpay.key.id=${RAZORPAY_KEY_ID}
razorpay.key.secret=${RAZORPAY_KEY_SECRET}

# Server Configuration
server.port=${PORT:8080}
server.servlet.context-path=/
server.compression.enabled=true
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=1024

# SSL Configuration (if using HTTPS)
# server.ssl.key-store=${SSL_KEYSTORE_PATH}
# server.ssl.key-store-password=${SSL_KEYSTORE_PASSWORD}
# server.ssl.key-store-type=PKCS12
# server.ssl.key-alias=${SSL_KEY_ALIAS}

# Logging Configuration
logging.level.root=WARN
logging.level.com.example.E_Commerce=INFO
logging.level.org.springframework.security=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot.autoconfigure=WARN

# Log file configuration
logging.file.name=${LOG_FILE_PATH:/var/log/ecommerce/application.log}
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n
logging.pattern.console=%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

# Log rotation
logging.logback.rollingpolicy.max-file-size=10MB
logging.logback.rollingpolicy.max-history=30
logging.logback.rollingpolicy.total-size-cap=1GB

# Mail Configuration (for notifications)
spring.mail.host=${MAIL_HOST:smtp.gmail.com}
spring.mail.port=${MAIL_PORT:587}
spring.mail.username=${MAIL_USERNAME}
spring.mail.password=${MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.ssl.trust=${MAIL_HOST:smtp.gmail.com}

# Actuator Configuration (for monitoring)
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=when-authorized
management.endpoint.info.enabled=true
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Cache Configuration
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=10m

# Session Configuration
server.servlet.session.timeout=30m
server.servlet.session.cookie.secure=true
server.servlet.session.cookie.http-only=true
server.servlet.session.cookie.same-site=strict

# Error Handling
server.error.include-stacktrace=never
server.error.include-message=never
server.error.include-binding-errors=never

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JSON Configuration
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.time-zone=UTC

# Validation Configuration
spring.validation.fail-fast=true

# Internationalization
spring.messages.basename=messages
spring.messages.encoding=UTF-8
spring.messages.cache-duration=3600

# Application Information
info.app.name=E-Commerce Store
info.app.description=Full-stack E-Commerce Application with Spring Boot
info.app.version=1.0.0
info.app.encoding=UTF-8
info.app.java.version=${java.version}

# Custom Application Properties
app.name=E-Commerce Store
app.version=1.0.0
app.environment=production
app.timezone=UTC

# Payment Configuration
payment.currency=INR
payment.timeout=900000
payment.retry.attempts=3
payment.retry.delay=5000

# Order Configuration
order.auto-cancel.timeout=1800000
order.max.items=50
order.min.amount=1.00

# Product Configuration
product.max.images=5
product.max.description.length=2000
product.search.min.length=2

# User Configuration
user.password.min.length=6
user.password.max.length=50
user.session.timeout=1800000

# Admin Configuration
admin.dashboard.refresh.interval=30000
admin.orders.page.size=20
admin.products.page.size=20
admin.users.page.size=20

# Security Headers
server.servlet.session.tracking-modes=cookie
server.servlet.session.cookie.name=JSESSIONID
server.servlet.session.cookie.path=/
server.servlet.session.cookie.max-age=1800

# Performance Configuration
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Database Migration (if using Flyway)
# spring.flyway.enabled=true
# spring.flyway.locations=classpath:db/migration
# spring.flyway.baseline-on-migrate=true

# Liquibase (alternative to Flyway)
# spring.liquibase.enabled=true
# spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml
